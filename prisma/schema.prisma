// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role          Role
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Member {
  id        String   @id @default(cuid())
  slug      String   @unique
  nama      String
  image     String
  kelas     String
  gender    Gender
  jabatan   Jabatan  @default(Anggota)
  prioritas Int
  divisi    Divisi[]
}

model Divisi {
  id       Int        @id @default(autoincrement())
  memberId String
  member   Member     @relation(fields: [memberId], references: [slug])
  divisi   EnumDivisi
}

model Alumni {
  id       Int            @id @default(autoincrement())
  slug     String         @unique
  nama     String
  Angkatan Int
  divisi   AlumniDivisi[]
}

model AlumniDivisi {
  id       Int        @id @default(autoincrement())
  alumniId String
  alumni   Alumni     @relation(fields: [alumniId], references: [slug])
  divisi   EnumDivisi
}

model Dokumentasi {
  id            String @id
  slug          String @unique
  name          String
  url           String
}

enum EnumDivisi {
  Cameraman
  Fotografer
  Reporter
  Tim_Kreatif
  Editor
}

enum Gender {
  Laki_Laki
  Perempuan
}

enum Jabatan {
  Ketua
  Wakil_Ketua
  Sekertaris
  Bendahara
  Anggota
}

enum Role {
  Admin
  Officer
  User
}
